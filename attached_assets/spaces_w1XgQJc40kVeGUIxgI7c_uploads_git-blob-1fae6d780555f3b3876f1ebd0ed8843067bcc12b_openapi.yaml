openapi: 3.0.1
info:
  title: Zap Service
  description: Zap Service for quickly zapping pool liquidity in a single transaction
  contact:
    url: https://discord.gg/kyberswap
    email: bd@kyber.network
  version: 1.2.0
servers:
  - url: "https://zap-api.kyberswap.com/{chain}"
    description: production
    variables:
      chain:
        enum:
          - arbitrum
          - avalanche
          - base
          - blast
          - bsc
          - ethereum
          - linea
          - optimism
          - polygon
          - polygon-zkevm
          - scroll
          - zksync
        default: arbitrum
tags:
  - name: Service
paths:
  /api/v1/in/route:
    get:
      tags:
        - Service
      summary: Get the best zap-in route.
      operationId: Service_GetInRoute
      parameters:
        - name: dex
          in: query
          description: |-
            Refer to https://docs.kyberswap.com/kyberswap-solutions/kyberswap-zap-as-a-service/zaps-supported-chains-dexes for list of supported dexes for each chain
          required: false
          style: form
          explode: true
          schema:
            type: string
            default: DEX_UNISWAPV3
            enum:
              - DEX_UNISWAPV3
          example: "DEX_UNISWAPV3"
        - name: pool.id
          in: query
          description: id of the pool to zap into.
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: "0x2f5e87c9312fa29aed5c179e456625d79015299c"
        - name: position.id
          in: query
          description: id of the position to add liquidity to; omit to create a new uniswapV3 position. for uniswapV2 this is user address
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: position.tickLower
          in: query
          description: "min tick of the position, required if creating a new uniswapV3 position."
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
          example: 120000
        - name: position.tickUpper
          in: query
          description: "max tick of the position, required if creating a new uniswapV3 position."
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
          example: 480000
        - name: tokensIn
          in: query
          description: which token(s) to use as zap source. also accepts comma separated addresses
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: amountsIn
          in: query
          description: "amount(s) to zap including fee, corresponding to tokenIn. also accepts comma separated amounts."
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: tokenIn
          in: query
          description: |-
            which token(s) to use as zap source. also accepts comma separated addresses.
            deprecated: use tokens_in. if both fields are specified, they are combined
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
          example: "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
        - name: amountIn
          in: query
          description: |-
            amount(s) to zap including fee, corresponding to tokenIn. also accepts comma separated amounts.
            deprecated: use amounts_in. if both fields are specified, they are combined
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
          example: "1000000000000000000"
        - name: aggregatorOptions.disable
          in: query
          description: whether to disable swapping with the aggregator
          required: false
          style: form
          explode: true
          schema:
            type: boolean
        - name: aggregatorOptions.includedSources
          in: query
          description: comma-separated list of sources to use for aggregator
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: aggregatorOptions.excludedSources
          in: query
          description: comma-separated list of sources to exclude for aggregator
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: aggregatorOptions.excludedPools
          in: query
          description: comma-separated list of pools to exclude for aggregator
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: feeAddress
          in: query
          description: the address of the fee recipient.
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: feePcm
          in: query
          description: |-
            fee percentage in per cent mille (0.001% or 1 in 100,000). Ignored if feeAddress is empty.
            From 0 to 100,000 inclusively. Example: 1 for 0.001%.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
        - name: slippage
          in: query
          description: |-
            maximum slippage tolerance in basis points (0.01%), used for aggregator (exceeding which the transaction will
            revert) and pool swap during zap (for additional zapping and for refund).
            From 0 to 10,000 inclusively. Example: 1 for 0.01%.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: "100"
        - name: X-Client-Id
          in: header
          description: Client Id
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: "zap-docs"
        - name: X-Request-Id
          in: header
          description: Request Id
          required: false
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetInRouteResponse'
        "400":
          description: Invalid Argument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
              example:
                code: 3
                message: "validation error:\\\\n - pool: missing tokens [Pool.tokens]\\\\n - pool.id: value does not match regex pattern `^0x[0-9A-Za-z]{40}$` [string.pattern]\\\\n - position: value is required [required]\\\\n - token_in[0]: value does not match regex pattern `^0x[0-9A-Za-z]{40}(,0x[0-9A-Za-z]{40})*$` [string.pattern]\\\\n - amount_in[0]: value does not match regex pattern `^\\\\d+(,\\\\d+)*$` [string.pattern]\\\\n - fee_address: value does not match regex pattern `^0x[0-9A-Za-z]{40}$` [string.pattern]"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
              example:
                code: 5
                message: "failed to get zap routes: cannot swap tokens [0xE2035f04040A135c4dA2f96AcA742143c57c79F9]"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /api/v1/in/route/decode:
    post:
      tags:
        - Service
      summary: Decode zap-in route for debugging purposes.
      operationId: Service_DecodeInRoute
      requestBody:
        description: Decode zap-in route for debugging purposes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1DecodeInRouteRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DecodeInRouteResponse'
        "400":
          description: Invalid Argument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
              example:
                code: 3
                message: "validation error:\\\\n - pool: missing tokens [Pool.tokens]\\\\n - pool.id: value does not match regex pattern `^0x[0-9A-Za-z]{40}$` [string.pattern]\\\\n - position: value is required [required]\\\\n - token_in[0]: value does not match regex pattern `^0x[0-9A-Za-z]{40}(,0x[0-9A-Za-z]{40})*$` [string.pattern]\\\\n - amount_in[0]: value does not match regex pattern `^\\\\d+(,\\\\d+)*$` [string.pattern]\\\\n - fee_address: value does not match regex pattern `^0x[0-9A-Za-z]{40}$` [string.pattern]"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
              example:
                code: 5
                message: "failed to get zap routes: cannot swap tokens [0xE2035f04040A135c4dA2f96AcA742143c57c79F9]"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      x-codegen-request-body-name: body
      parameters: []
  /api/v1/in/route/build:
    post:
      tags:
        - Service
      summary: Build encoded data for the specified zap-in route.
      operationId: Service_BuildInRoute
      parameters:
        - name: X-Client-Id
          in: header
          description: Client Id
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: "zap-docs"
        - name: X-Request-Id
          in: header
          description: Request Id
          required: false
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: Build encoded data for zap-in transaction from the specified route.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1BuildInRouteRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1BuildInRouteResponse'
        "400":
          description: Invalid Argument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
              example:
                code: 3
                message: "validation error:\\\\n - pool: missing tokens [Pool.tokens]\\\\n - pool.id: value does not match regex pattern `^0x[0-9A-Za-z]{40}$` [string.pattern]\\\\n - position: value is required [required]\\\\n - token_in[0]: value does not match regex pattern `^0x[0-9A-Za-z]{40}(,0x[0-9A-Za-z]{40})*$` [string.pattern]\\\\n - amount_in[0]: value does not match regex pattern `^\\\\d+(,\\\\d+)*$` [string.pattern]\\\\n - fee_address: value does not match regex pattern `^0x[0-9A-Za-z]{40}$` [string.pattern]"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
              example:
                code: 5
                message: "failed to get zap routes: cannot swap tokens [0xE2035f04040A135c4dA2f96AcA742143c57c79F9]"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      x-codegen-request-body-name: body
  /api/v1/migrate/route:
    get:
      tags:
        - Service
      summary: Get the best zap-migrate route.
      operationId: Service_GetMigrateRoute
      parameters:
        - name: dexFrom
          in: query
          description: |-
            Refer to https://docs.kyberswap.com/kyberswap-solutions/kyberswap-zap-as-a-service/zaps-supported-chains-dexes for list of supported dexes for each chain
          required: false
          style: form
          explode: true
          schema:
            type: string
            default: DEX_UNISWAPV3
            enum:
              - DEX_UNISWAPV3
          example: "DEX_UNISWAPV3"
        - name: dexTo
          in: query
          description: |-
            Refer to https://docs.kyberswap.com/kyberswap-solutions/kyberswap-zap-as-a-service/zaps-supported-chains-dexes for list of supported dexes for each chain
          required: false
          style: form
          explode: true
          schema:
            type: string
            default: DEX_UNISWAPV3
            enum:
              - DEX_UNISWAPV3
          example: "DEX_UNISWAPV3"
        - name: poolFrom.id
          in: query
          description: id of the pool to zap into.
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: poolTo.id
          in: query
          description: id of the pool to zap into.
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: positionFrom.id
          in: query
          description: id of the position to add liquidity to; omit to create a new uniswapV3 position. for uniswapV2 this is user address
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: positionFrom.tickLower
          in: query
          description: "min tick of the position, required if creating a new uniswapV3 position."
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: positionFrom.tickUpper
          in: query
          description: "max tick of the position, required if creating a new uniswapV3 position."
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: positionTo.id
          in: query
          description: id of the position to add liquidity to; omit to create a new uniswapV3 position. for uniswapV2 this is user address
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: positionTo.tickLower
          in: query
          description: "min tick of the position, required if creating a new uniswapV3 position."
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: positionTo.tickUpper
          in: query
          description: "max tick of the position, required if creating a new uniswapV3 position."
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: liquidityOut
          in: query
          description: "liquidity amount to withdraw, or empty or 0 to withdraw all"
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: collectFee
          in: query
          description: whether to collect fee from the position NFT or not.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
        - name: aggregatorOptions.disable
          in: query
          description: whether to disable swapping with the aggregator
          required: false
          style: form
          explode: true
          schema:
            type: boolean
        - name: aggregatorOptions.includedSources
          in: query
          description: comma-separated list of sources to use for aggregator
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: aggregatorOptions.excludedSources
          in: query
          description: comma-separated list of sources to exclude for aggregator
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: aggregatorOptions.excludedPools
          in: query
          description: comma-separated list of pools to exclude for aggregator
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: feeAddress
          in: query
          description: |-
            options for getting aggregator routes
            the address of the fee recipient.
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: feePcm
          in: query
          description: |-
            fee percentage in per cent mille (0.001% or 1 in 100,000). Ignored if feeAddress is empty.
            From 0 to 100,000 inclusively. Example: 1 for 0.001%.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
        - name: slippage
          in: query
          description: |-
            maximum slippage tolerance in basis points (0.01%), used for aggregator (exceeding which the transaction will
            revert) and pool swap during zap (for additional zapping and for refund).
            From 0 to 10,000 inclusively. Example: 1 for 0.01%.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: "100"
        - name: X-Client-Id
          in: header
          description: Client Id
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: "zap-docs"
        - name: X-Request-Id
          in: header
          description: Request Id
          required: false
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetMigrateRouteResponse'
              example:
                code: 0
                data: {}
        "400":
          description: Invalid Argument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
              example:
                code: 3
                message: "validation error:\\\\n - pool: missing tokens [Pool.tokens]\\\\n - pool.id: value does not match regex pattern `^0x[0-9A-Za-z]{40}$` [string.pattern]\\\\n - position: value is required [required]\\\\n - token_in[0]: value does not match regex pattern `^0x[0-9A-Za-z]{40}(,0x[0-9A-Za-z]{40})*$` [string.pattern]\\\\n - amount_in[0]: value does not match regex pattern `^\\\\d+(,\\\\d+)*$` [string.pattern]\\\\n - fee_address: value does not match regex pattern `^0x[0-9A-Za-z]{40}$` [string.pattern]"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
              example:
                code: 5
                message: "failed to get zap routes: cannot swap tokens [0xE2035f04040A135c4dA2f96AcA742143c57c79F9]"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /api/v1/migrate/route/decode:
    post:
      tags:
        - Service
      summary: Decode zap-migrate route for debugging purposes.
      operationId: Service_DecodeMigrateRoute
      requestBody:
        description: Decode zap-migrate route for debugging purposes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1DecodeMigrateRouteRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DecodeMigrateRouteResponse'
        "400":
          description: Invalid Argument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
              example:
                code: 3
                message: "validation error:\\\\n - pool: missing tokens [Pool.tokens]\\\\n - pool.id: value does not match regex pattern `^0x[0-9A-Za-z]{40}$` [string.pattern]\\\\n - position: value is required [required]\\\\n - token_in[0]: value does not match regex pattern `^0x[0-9A-Za-z]{40}(,0x[0-9A-Za-z]{40})*$` [string.pattern]\\\\n - amount_in[0]: value does not match regex pattern `^\\\\d+(,\\\\d+)*$` [string.pattern]\\\\n - fee_address: value does not match regex pattern `^0x[0-9A-Za-z]{40}$` [string.pattern]"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
              example:
                code: 5
                message: "failed to get zap routes: cannot swap tokens [0xE2035f04040A135c4dA2f96AcA742143c57c79F9]"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      x-codegen-request-body-name: body
      parameters: []
  /api/v1/migrate/route/build:
    post:
      tags:
        - Service
      summary: Build encoded data for the specified zap-migrate route.
      operationId: Service_BuildMigrateRoute
      requestBody:
        description: Build encoded data for zap-migrate transaction from the specified route.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1BuildMigrateRouteRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1BuildMigrateRouteResponse'
        "400":
          description: Invalid Argument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
              example:
                code: 3
                message: "validation error:\\\\n - pool: missing tokens [Pool.tokens]\\\\n - pool.id: value does not match regex pattern `^0x[0-9A-Za-z]{40}$` [string.pattern]\\\\n - position: value is required [required]\\\\n - token_in[0]: value does not match regex pattern `^0x[0-9A-Za-z]{40}(,0x[0-9A-Za-z]{40})*$` [string.pattern]\\\\n - amount_in[0]: value does not match regex pattern `^\\\\d+(,\\\\d+)*$` [string.pattern]\\\\n - fee_address: value does not match regex pattern `^0x[0-9A-Za-z]{40}$` [string.pattern]"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
              example:
                code: 5
                message: "failed to get zap routes: cannot swap tokens [0xE2035f04040A135c4dA2f96AcA742143c57c79F9]"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      x-codegen-request-body-name: body
      parameters: []
  /api/v1/out/route:
    get:
      tags:
        - Service
      summary: Get the best zap-out route.
      operationId: Service_GetOutRoute
      parameters:
        - name: dexFrom
          in: query
          description: |-
            Refer to https://docs.kyberswap.com/kyberswap-solutions/kyberswap-zap-as-a-service/zaps-supported-chains-dexes for list of supported dexes for each chain
          required: false
          style: form
          explode: true
          schema:
            type: string
            default: DEX_UNISWAPV3
            enum:
              - DEX_UNISWAPV3
          example: "DEX_UNISWAPV3"
        - name: poolFrom.id
          in: query
          description: id of the pool to zap into.
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: positionFrom.id
          in: query
          description: id of the position to add liquidity to; omit to create a new uniswapV3 position. for uniswapV2 this is user address
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: positionFrom.tickLower
          in: query
          description: "min tick of the position, required if creating a new uniswapV3 position."
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: positionFrom.tickUpper
          in: query
          description: "max tick of the position, required if creating a new uniswapV3 position."
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: liquidityOut
          in: query
          description: "liquidity amount to withdraw, or empty or 0 to withdraw all"
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: collectFee
          in: query
          description: whether to collect fee from the position NFT or not.
          required: false
          style: form
          explode: true
          schema:
            type: boolean
        - name: tokenOut
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: aggregatorOptions.disable
          in: query
          description: whether to disable swapping with the aggregator
          required: false
          style: form
          explode: true
          schema:
            type: boolean
        - name: aggregatorOptions.includedSources
          in: query
          description: comma-separated list of sources to use for aggregator
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: aggregatorOptions.excludedSources
          in: query
          description: comma-separated list of sources to exclude for aggregator
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: aggregatorOptions.excludedPools
          in: query
          description: comma-separated list of pools to exclude for aggregator
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: feeAddress
          in: query
          description: fee recipient
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: feePcm
          in: query
          description: |-
            fee percentage in per cent mille (0.001% or 1 in 100,000). Ignored if feeAddress is empty.
            From 0 to 100,000 inclusively. Example: 1 for 0.001%.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
        - name: slippage
          in: query
          description: |-
            maximum slippage tolerance in basis points (0.01%), used for aggregator (exceeding which the transaction will
            revert) and pool swap during zap (for additional zapping and for refund).
            From 0 to 10,000 inclusively. Example: 1 for 0.01%.
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
          example: "100"
        - name: X-Client-Id
          in: header
          description: Client Id
          required: false
          style: simple
          explode: false
          schema:
            type: string
          example: "zap-docs"
        - name: X-Request-Id
          in: header
          description: Request Id
          required: false
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetOutRouteResponse'
              example:
                code: 0
                data: {}
        "400":
          description: Invalid Argument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
              example:
                code: 3
                message: "validation error:\\\\n - pool: missing tokens [Pool.tokens]\\\\n - pool.id: value does not match regex pattern `^0x[0-9A-Za-z]{40}$` [string.pattern]\\\\n - position: value is required [required]\\\\n - token_in[0]: value does not match regex pattern `^0x[0-9A-Za-z]{40}(,0x[0-9A-Za-z]{40})*$` [string.pattern]\\\\n - amount_in[0]: value does not match regex pattern `^\\\\d+(,\\\\d+)*$` [string.pattern]\\\\n - fee_address: value does not match regex pattern `^0x[0-9A-Za-z]{40}$` [string.pattern]"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
              example:
                code: 5
                message: "failed to get zap routes: cannot swap tokens [0xE2035f04040A135c4dA2f96AcA742143c57c79F9]"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /api/v1/out/route/decode:
    post:
      tags:
        - Service
      summary: Decode zap-out route for debugging purposes.
      operationId: Service_DecodeOutRoute
      requestBody:
        description: Decode zap-out route for debugging purposes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1DecodeOutRouteRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1DecodeOutRouteResponse'
        "400":
          description: Invalid Argument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
              example:
                code: 3
                message: "validation error:\\\\n - pool: missing tokens [Pool.tokens]\\\\n - pool.id: value does not match regex pattern `^0x[0-9A-Za-z]{40}$` [string.pattern]\\\\n - position: value is required [required]\\\\n - token_in[0]: value does not match regex pattern `^0x[0-9A-Za-z]{40}(,0x[0-9A-Za-z]{40})*$` [string.pattern]\\\\n - amount_in[0]: value does not match regex pattern `^\\\\d+(,\\\\d+)*$` [string.pattern]\\\\n - fee_address: value does not match regex pattern `^0x[0-9A-Za-z]{40}$` [string.pattern]"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
              example:
                code: 5
                message: "failed to get zap routes: cannot swap tokens [0xE2035f04040A135c4dA2f96AcA742143c57c79F9]"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      x-codegen-request-body-name: body
      parameters: []
  /api/v1/out/route/build:
    post:
      tags:
        - Service
      summary: Build encoded data for the specified zap-out route.
      operationId: Service_BuildOutRoute
      requestBody:
        description: Build encoded data for zap-out transaction from the specified route.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1BuildOutRouteRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1BuildOutRouteResponse'
        "400":
          description: Invalid Argument
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
              example:
                code: 3
                message: "validation error:\\\\n - pool: missing tokens [Pool.tokens]\\\\n - pool.id: value does not match regex pattern `^0x[0-9A-Za-z]{40}$` [string.pattern]\\\\n - position: value is required [required]\\\\n - token_in[0]: value does not match regex pattern `^0x[0-9A-Za-z]{40}(,0x[0-9A-Za-z]{40})*$` [string.pattern]\\\\n - amount_in[0]: value does not match regex pattern `^\\\\d+(,\\\\d+)*$` [string.pattern]\\\\n - fee_address: value does not match regex pattern `^0x[0-9A-Za-z]{40}$` [string.pattern]"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
              example:
                code: 5
                message: "failed to get zap routes: cannot swap tokens [0xE2035f04040A135c4dA2f96AcA742143c57c79F9]"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      x-codegen-request-body-name: body
      parameters: []
components:
  schemas:
    PoolDetailsAlgebraV1:
      title: details of the algebraV1 pool
      type: object
      properties:
        tick:
          title: pool tick before zap
          type: integer
          format: int32
        newTick:
          title: pool tick after zap
          type: integer
          format: int32
        sqrtP:
          title: pool sqrt price (times 2^96) before zap
          type: string
        newSqrtP:
          title: pool sqrt price (times 2^96) after zap
          type: string
    PoolDetailsUniswapV2:
      title: details of the uniswapV2 pool
      type: object
      properties:
        reserve0:
          title: reserve0 before zap
          type: string
        newReserve0:
          title: reserve0 after zap
          type: string
        reserve1:
          title: reserve1 before zap
          type: string
        newReserve1:
          title: reserve1 after zap
          type: string
    PoolDetailsUniswapV3:
      title: details of the uniswapV3 pool
      type: object
      properties:
        tick:
          title: pool tick before zap
          type: integer
          format: int32
        newTick:
          title: pool tick after zap
          type: integer
          format: int32
        sqrtP:
          title: pool sqrt price (times 2^96) before zap
          type: string
        newSqrtP:
          title: pool sqrt price (times 2^96) after zap
          type: string
    SwapActionSwap:
      title: a single swap
      type: object
      properties:
        tokenIn:
          $ref: '#/components/schemas/ZapDetailsTokenAmount'
        tokenOut:
          $ref: '#/components/schemas/ZapDetailsTokenAmount'
    ZapDetailsAction:
      title: "one of the zap actions, specified by the type field"
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ZapDetailsActionType'
        protocolFee:
          $ref: '#/components/schemas/ZapDetailsFeeAction'
        partnerFee:
          $ref: '#/components/schemas/ZapDetailsFeeAction'
        aggregatorSwap:
          $ref: '#/components/schemas/ZapDetailsSwapAction'
        poolSwap:
          $ref: '#/components/schemas/ZapDetailsSwapAction'
        addLiquidity:
          $ref: '#/components/schemas/ZapDetailsLiquidityAction'
        removeLiquidity:
          $ref: '#/components/schemas/ZapDetailsLiquidityAction'
        refund:
          $ref: '#/components/schemas/ZapDetailsRefundAction'
    ZapDetailsActionType:
      title: type of the zap action
      type: string
      description: |-
        - ACTION_TYPE_UNSPECIFIED: Unspecified action
         - ACTION_TYPE_PROTOCOL_FEE: protocol fee
         - ACTION_TYPE_PARTNER_FEE: partner fee
         - ACTION_TYPE_AGGREGATOR_SWAP: aggregator swap
         - ACTION_TYPE_POOL_SWAP: pool swap
         - ACTION_TYPE_ADD_LIQUIDITY: add liquidity
         - ACTION_TYPE_REMOVE_LIQUIDITY: remove liquidity
         - ACTION_TYPE_REFUND: refund
      default: ACTION_TYPE_UNSPECIFIED
      enum:
        - ACTION_TYPE_UNSPECIFIED
        - ACTION_TYPE_PROTOCOL_FEE
        - ACTION_TYPE_PARTNER_FEE
        - ACTION_TYPE_AGGREGATOR_SWAP
        - ACTION_TYPE_POOL_SWAP
        - ACTION_TYPE_ADD_LIQUIDITY
        - ACTION_TYPE_REMOVE_LIQUIDITY
        - ACTION_TYPE_REFUND
    ZapDetailsFeeAction:
      title: fee collection
      type: object
      properties:
        pcm:
          title: fee per cent mille (0.001%) of the source zap amount
          type: integer
          format: int64
        tokens:
          title: token amounts
          type: array
          items:
            $ref: '#/components/schemas/ZapDetailsTokenAmount'
    ZapDetailsLiquidityAction:
      title: added or removed liquidity
      type: object
      properties:
        tokens:
          title: added or removed token amounts
          type: array
          items:
            $ref: '#/components/schemas/ZapDetailsTokenAmount'
        fees:
          title: collected fees
          type: array
          items:
            $ref: '#/components/schemas/ZapDetailsTokenAmount'
        token0:
          $ref: '#/components/schemas/ZapDetailsTokenAmount'
        token1:
          $ref: '#/components/schemas/ZapDetailsTokenAmount'
    ZapDetailsRefundAction:
      title: refund left-over tokens to user
      type: object
      properties:
        tokens:
          title: refunded token amounts
          type: array
          items:
            $ref: '#/components/schemas/ZapDetailsTokenAmount'
    ZapDetailsSwapAction:
      title: "token swap, either with aggregator or with pool"
      type: object
      properties:
        swaps:
          type: array
          items:
            $ref: '#/components/schemas/SwapActionSwap'
    ZapDetailsTokenAmount:
      title: token address and amount in wei and in usd
      type: object
      properties:
        address:
          title: token address
          pattern: "^0x[0-9A-Za-z]{40}$"
          type: string
        amount:
          title: wei amount of the token
          type: string
        amountUsd:
          title: USD value of the token
          type: string
    protobufAny:
      type: object
      properties:
        '@type':
          type: string
      additionalProperties:
        type: object
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/protobufAny'
    v1AggregatorOptions:
      title: options for getting aggregator routes
      type: object
      properties:
        disable:
          title: whether to disable swapping with the aggregator
          type: boolean
        includedSources:
          title: comma-separated list of sources to use for aggregator
          type: string
        excludedSources:
          title: comma-separated list of sources to exclude for aggregator
          type: string
        excludedPools:
          title: comma-separated list of pools to exclude for aggregator
          type: string
    v1BuildInRouteRequest:
      type: object
      properties:
        sender:
          type: string
          description: "the wallet sending the transaction, and thus, the tokens."
        recipient:
          type: string
          description: the wallet receiving the new position. default to sender if empty.
        route:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: the route as returned from get-route endpoint.
          format: byte
        deadline:
          type: integer
          description: deadline for the swap transaction to execute.
          format: int64
        source:
          type: string
          description: the source of the zap-in transaction.
        permits:
          type: object
          additionalProperties:
            type: string
          description: map of each token address to its ERC20 permit using EIP-2612 to skip a separate approval step.
      description: Build encoded data for zap-in transaction from the specified route.
      example:
        sender: "0xa2DFeb674d997b68ec5adB0A6fb9136BD45C2D2d"
        recipient: "0xa2DFeb674d997b68ec5adB0A6fb9136BD45C2D2d"
        route: "KLUv/WAdB00bAOY5nCNAj3JMrqhs1F7Rx8ZtyeIRkgGqIXfgSOampMyhZleOYZgzAYgAigChAM2d3Nn7iLnY66vzVWYuXVS7q9ecpZ+zuUgxlxgVb4CvKk5c764QuTno0imHOZAmq01WqNmBDoff4WhbyNyxdn8hlq4uHYQOP1BjCDWHV0uHsQX9crda1svR5WSJl+75T1b4y8HZzdt+qYcdjX0yKJX+s7wxlBi85iCX0RzlUjbnuKRa5Tb3XEbqyqp2Of//RpLLhIJJCiRtYlJRk0uHGLyGI0Dr/+ek+tNxrUdW3G9EDMDECqAxIvZvK0xEXR2gEM1dLrFL1zB4KVM9X3vb1XX/1/nXb69d/6uUL4VyQUzVXKVZTCIREw9Ecimj1lUzXeXyRNWcxaVVVsuo//zJzUVQkfdfeTvXWykzqsJeinEpk7nPJOIMUC4aIpOJRPSQtIN0WgHQJtgjYZSHhEk8709hFpZLksolagwRhAISwdd1/NluW+wXS/XMIaXQYo5lmQ/kbGQyoVwGBERzLbpMKpcyJ9Aa1BoBq0SYdulScxc+sie3wgC0sIeFPXjZI7oocGLv6/pSVr7bGV0UmiXCoOZaxGERCKsQaA+kshC1iQpDSMe+u1hx768GtLq65hwWh1ZfARm1VPGq5h6XMo1GJtPIVuqpmz/Vql6ZjPnoqlZTPS3icqW+WN2bIVLDPT0pXPxk76WsnZSHSw1MvnA961prlx+iOTS4hwRyEak0h+RySWGaQ1LQUAGJWIKloEEfEoBJRLmoPJBKBNAqKpdHU9FVcXnbs/+3ZT/sdW0/ns63cyvmUGYqZ6OyQrg6PTUymeZQXBImAmEgQAJCDDOmHZLEGJj0Yxm1rG2f2YZ071vZSmuTEYMc7ksXKTyQndCnyoI34X93YwbNI3xyLUJ6AY9LrS6IJcMwm/eSsBsVqAI2PFuTKUizGWTHhcFXrKvsl7iawsClp6xyNDBUSxoFdUsqRanhffuMrI+Aa2sqmbkA6Xgu21EIhh/cypg4W7hogNnGFhyT24o1cAeaZ5ILOW7cAQIfQCmJ49N52JNgQ7O7L1gWAkKhheQ60Elw0AKCCulGAVUHGJgaPIElWIKKTLpC06UHnCVX7TvCAMNuc2ogLKuyTnCUAPqFS2x0VeyCy+qwbowuW746oVmIAg=="
        deadline: 1800000000
        source: "zap-docs"
    v1BuildInRouteResponse:
      type: object
      properties:
        code:
          title: grpc error code
          type: integer
          format: int32
        message:
          title: grpc error message
          type: string
        data:
          $ref: '#/components/schemas/v1BuildInRouteResponseData'
        requestId:
          title: request trace id
          type: string
      description: Returns the zap-in transaction details.
      example:
        code: 0
        message: "OK"
        data:
          routerAddress: "0x6960f99e6F9A9A5EFcd44C5BaA3245aC2b145287"
          callData: "0x0779b145000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002400000000000000000000000000000000000000000000000000000000000000002000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000000600000000000000000000000002f5e87c9312fa29aed5c179e456625d79015299c000000000000000000000000c36442b4a4522e871399cd717abdd847ab11fe8800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000a2dfeb674d997b68ec5adb0a6fb9136bd45c2d2d000000000000000000000000000000000000000000000000000000000001d4c000000000000000000000000000000000000000000000000000000000000753000000000000000000000000000000000000000000000000000000010912662471000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022ad1a118075557c20d42f2de3feedb8d16a8ee6000000000000000000000000bde6709804b89497f378c7123d5362f8a24cb7f6000000000000000000000000000000000000000000000000000000006b49d20000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000ca00000000000000000000000000000000000000000000000000000000000000be00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000082af49447d8a07e3bd95bd0d56f35241523fbab10000000000000000000000000000000000000000000000000de0b6b3a764000000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000088000000000000000000000000000000000000000000000000000000000000000800000000000000000000000008aec70a335b4cb0c3c0866065d9c04c26cd749fa0000000000000000000000000000000000000000000000000001c6bf5263400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000200000000000000000000000006131b5fae19ea4f9d964eac0408e4408b66337b500000000000000000000000000000000000000000000000006f035d38cbf350c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000644e21fd0e9000000000000000000000000000000000000000000000000000000000000002000000000000000000000000011ddd59c33c73c44733b4123a86ea5ce57f6e854000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000f1020100000029020000004bfc22a4da7f31f8a912a79a7e44a822398b4390000000000000000000b19efb8e131ef6010a010000002b0100000082670f35306253222f8a165869b28c64739ac62e010000000000000000063e96d7feac161600010982af49447d8a07e3bd95bd0d56f35241523fbab12f2a2543b76a4166549f7aab2e75bef0aefc5b0fbde6709804b89497f378c7123d5362f8a24cb7f60000000000000000000000006b49d2000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000285b4f00000000000000000000000000000000000000000000000000000082af49447d8a07e3bd95bd0d56f35241523fbab10000000000000000000000002f2a2543b76a4166549f7aab2e75bef0aefc5b0f000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000bde6709804b89497f378c7123d5362f8a24cb7f600000000000000000000000000000000000000000000000006f035d38cbf350c000000000000000000000000000000000000000000000000000000000027f3fe00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000000000000100000000000000000000000011ddd59c33c73c44733b4123a86ea5ce57f6e854000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000006f035d38cbf350c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001f97b22536f75726365223a227a61702d646f6373222c22416d6f756e74496e555344223a22313833352e38373838323235313139313031222c22416d6f756e744f7574555344223a22313833352e35303836363830393034393637222c22526566657272616c223a22222c22466c616773223a302c22496e74656772697479496e666f223a7b224b65794944223a2231222c225369676e6174757265223a224943644253394c714132676248584f6c557a3349626d75637a4679657755392f49796f70636d6875476a466e596b42377044773547585347592b2f5a4f4c664c4158795958346c4c797937384f525462307667714a695632677243706c36304a52796e4338443078724d73786e44446f764f646d592b6a6e71456d615670374b664b4b45526348744f30784f4f7472776f38537a73757a4c3672384a6b716f416558335a744f6b705a4a7a4e65694843612f4971384d6938345a792b597044726e7769766b714a524a535464665950787745704b62757a6c484a6165717a445276554f4f4d5556727344643276426b45377771536b6a6e69437a784665365076374c65366c49474c784c36314b4156484e4a3343667675702f54464c386f4c6a36417a547535415a3958533034377a56574266484a4a4379326d536e7236475778536e6635536157724c734f78776b7a344a665752513d3d227d7d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003200000000000000000000000000000000000000000000000000000000000000020000000000000000000000000c36442b4a4522e871399cd717abdd847ab11fe880000000000000000000000002f5e87c9312fa29aed5c179e456625d79015299c0000000000000000000000002f2a2543b76a4166549f7aab2e75bef0aefc5b0f00000000000000000000000000000000000000000000000000000000000001f400000000000000000000000082af49447d8a07e3bd95bd0d56f35241523fbab10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a2dfeb674d997b68ec5adb0a6fb9136bd45c2d2d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000108000000000000000000000000000000900000000000000000000000000000000100000000000000000000000000000001000000000000000000000000000000000000000000000000000000000001d4c000000000000000000000000000000000000000000000000000000000000753000000000000000000000000000000000000069118042346bcd79b11b76147d0ab000000000000000000000000000000000006b33a11557d53e337f572e1d50a4b0000000000000000000000000000000000000000000000000000010912662471000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000005d8fcbe11af100000000000000000000000000285a4600000000000000000000000000285c57000000000000000006ee8cb1ee542c44000000000000000006eee790cbf67b7c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006a213163b1c66b70364a5f1403ef0000000000000000000000000000000000000000000000000000000000003f64d000000000000000000000000000000000000000000000000075982b768bcece70000000000000000000000000000000000000000000000000000000000000000"
          value: "1000000000000000000"
        requestId: "b8c105304e178953e36021af9b26f3da"
    v1BuildInRouteResponseData:
      type: object
      properties:
        routerAddress:
          title: zap router address to send the zap-in transaction to
          type: string
        callData:
          title: call data for the zap-in transaction
          type: string
        value:
          title: native token value to transfer with the zap-in transaction in case of zapping with native tokens
          type: string
      description: Encompasses returned data.
    v1BuildMigrateRouteRequest:
      type: object
      properties:
        sender:
          type: string
          description: "the wallet sending the transaction, and thus, the tokens."
        recipient:
          type: string
          description: the wallet receiving the new position. default to sender if empty.
        route:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: the route as returned from get-route endpoint.
          format: byte
        deadline:
          type: integer
          description: deadline for the swap transaction to execute.
          format: int64
        source:
          type: string
          description: the source of the zap-migrate transaction.
        burnNft:
          type: boolean
          description: whether to throw away the position NFT or keep it.
      description: Build encoded data for zap-migrate transaction from the specified route.
    v1BuildMigrateRouteResponse:
      type: object
      properties:
        code:
          title: grpc error code
          type: integer
          format: int32
        message:
          title: grpc error message
          type: string
        data:
          $ref: '#/components/schemas/v1BuildMigrateRouteResponseData'
        requestId:
          title: request trace id
          type: string
      description: Returns the zap-migrate transaction details.
    v1BuildMigrateRouteResponseData:
      type: object
      properties:
        routerAddress:
          title: zap router address to send the zap-migrate transaction to
          type: string
        callData:
          title: call data for the zap-migrate transaction
          type: string
        value:
          title: native token value to transfer with the zap-migrate transaction in case of zapping with native tokens
          type: string
      description: Encompasses returned data.
    v1BuildOutRouteRequest:
      type: object
      properties:
        sender:
          type: string
          description: "the wallet sending the transaction, and thus, the tokens."
        recipient:
          type: string
          description: the wallet receiving the new position. default to sender if empty.
        route:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: the route as returned from get-route endpoint.
          format: byte
        deadline:
          type: integer
          description: deadline for the swap transaction to execute.
          format: int64
        source:
          type: string
          description: the source of the zap-out transaction.
        burnNft:
          type: boolean
          description: whether to throw away the position NFT or keep it.
      description: Build encoded data for zap-out transaction from the specified route.
    v1BuildOutRouteResponse:
      type: object
      properties:
        code:
          title: grpc error code
          type: integer
          format: int32
        message:
          title: grpc error message
          type: string
        data:
          $ref: '#/components/schemas/v1BuildOutRouteResponseData'
        requestId:
          title: request trace id
          type: string
      description: Returns the zap-out transaction details.
    v1BuildOutRouteResponseData:
      type: object
      properties:
        routerAddress:
          title: zap router address to send the zap-out transaction to
          type: string
        callData:
          title: call data for the zap-out transaction
          type: string
        value:
          title: native token value to transfer with the zap-out transaction in case of zapping with native tokens
          type: string
      description: Encompasses returned data.
    v1DecodeInRouteRequest:
      type: object
      properties:
        route:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: the route as returned from get-route endpoint.
          format: byte
      description: Decode zap-in route for debugging purposes.
      example:
        route: "KLUv/WAdB00bAOY5nCNAj3JMrqhs1F7Rx8ZtyeIRkgGqIXfgSOampMyhZleOYZgzAYgAigChAM2d3Nn7iLnY66vzVWYuXVS7q9ecpZ+zuUgxlxgVb4CvKk5c764QuTno0imHOZAmq01WqNmBDoff4WhbyNyxdn8hlq4uHYQOP1BjCDWHV0uHsQX9crda1svR5WSJl+75T1b4y8HZzdt+qYcdjX0yKJX+s7wxlBi85iCX0RzlUjbnuKRa5Tb3XEbqyqp2Of//RpLLhIJJCiRtYlJRk0uHGLyGI0Dr/+ek+tNxrUdW3G9EDMDECqAxIvZvK0xEXR2gEM1dLrFL1zB4KVM9X3vb1XX/1/nXb69d/6uUL4VyQUzVXKVZTCIREw9Ecimj1lUzXeXyRNWcxaVVVsuo//zJzUVQkfdfeTvXWykzqsJeinEpk7nPJOIMUC4aIpOJRPSQtIN0WgHQJtgjYZSHhEk8709hFpZLksolagwRhAISwdd1/NluW+wXS/XMIaXQYo5lmQ/kbGQyoVwGBERzLbpMKpcyJ9Aa1BoBq0SYdulScxc+sie3wgC0sIeFPXjZI7oocGLv6/pSVr7bGV0UmiXCoOZaxGERCKsQaA+kshC1iQpDSMe+u1hx768GtLq65hwWh1ZfARm1VPGq5h6XMo1GJtPIVuqpmz/Vql6ZjPnoqlZTPS3icqW+WN2bIVLDPT0pXPxk76WsnZSHSw1MvnA961prlx+iOTS4hwRyEak0h+RySWGaQ1LQUAGJWIKloEEfEoBJRLmoPJBKBNAqKpdHU9FVcXnbs/+3ZT/sdW0/ns63cyvmUGYqZ6OyQrg6PTUymeZQXBImAmEgQAJCDDOmHZLEGJj0Yxm1rG2f2YZ071vZSmuTEYMc7ksXKTyQndCnyoI34X93YwbNI3xyLUJ6AY9LrS6IJcMwm/eSsBsVqAI2PFuTKUizGWTHhcFXrKvsl7iawsClp6xyNDBUSxoFdUsqRanhffuMrI+Aa2sqmbkA6Xgu21EIhh/cypg4W7hogNnGFhyT24o1cAeaZ5ILOW7cAQIfQCmJ49N52JNgQ7O7L1gWAkKhheQ60Elw0AKCCulGAVUHGJgaPIElWIKKTLpC06UHnCVX7TvCAMNuc2ogLKuyTnCUAPqFS2x0VeyCy+qwbowuW746oVmIAg=="
    v1DecodeInRouteResponse:
      type: object
      properties:
        code:
          title: grpc error code
          type: integer
          format: int32
        message:
          title: grpc error message
          type: string
        data:
          $ref: '#/components/schemas/v1DecodeInRouteResponseData'
        requestId:
          title: request trace id
          type: string
      description: Returns the zap-in route details.
      example:
        code: 0
        message: "OK"
        data:
          json: "{\"chainId\":42161,\"dex\":2,\"pool\":{\"id\":\"0x2f5e87c9312fa29aed5c179e456625d79015299c\",\"token0\":\"0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f\",\"token1\":\"0x82af49447d8a07e3bd95bd0d56f35241523fbab1\",\"fee\":500,\"price\":188970251348.45105,\"extra\":{\"3\":{\"t\":259661,\"s\":\"34441043722219267846042009462652656\"}},\"zapExtra\":{\"3\":{\"t\":259661,\"s\":\"34441043737601305531684264539945030\"}},\"liquidity\":529599305415346842,\"swapAmount\":102872182233841},\"position\":{\"tick_lower\":120000,\"tick_upper\":480000},\"liquidity\":1149974764979,\"usedAmount0\":2645358,\"usedAmount1\":499438386463928322,\"tokenIn\":\"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\"amount\":1000000000000000000,\"prices\":[3.6730020164960005e-15,0.0006940350977082961,3.6730020164960005e-15,3.6730020164959996e-08],\"feeAddress\":\"0x0000000000000000000000000000000000000000\",\"protocolFeePcm\":50,\"slippage\":100,\"aggregatorRoute\":{\"tokenIn\":\"0x82af49447d8a07e3bd95bd0d56f35241523fbab1\",\"amountIn\":\"499958741353837836\",\"amountInUsd\":\"1836.3494651574485\",\"tokenInMarketPriceAvailable\":false,\"tokenOut\":\"0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f\",\"amountOut\":\"2644815\",\"amountOutUsd\":\"1836.3378439460255\",\"tokenOutMarketPriceAvailable\":false,\"gas\":\"450000\",\"gasPrice\":\"10000000\",\"gasUsd\":\"0.016528509074232\",\"extraFee\":{\"feeAmount\":\"0\"},\"route\":[[{\"pool\":\"0x4bfc22a4da7f31f8a912a79a7e44a822398b4390\",\"tokenIn\":\"0x82af49447d8a07e3bd95bd0d56f35241523fbab1\",\"tokenOut\":\"0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f\",\"limitReturnAmount\":\"0\",\"swapAmount\":\"49995874135383798\",\"amountOut\":\"264492\",\"exchange\":\"pancake-v3\",\"poolLength\":2,\"poolType\":\"pancake-v3\",\"poolExtra\":{\"blockNumber\":0},\"extra\":{}}],[{\"pool\":\"0x82670f35306253222f8a165869b28c64739ac62e\",\"tokenIn\":\"0x82af49447d8a07e3bd95bd0d56f35241523fbab1\",\"tokenOut\":\"0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f\",\"limitReturnAmount\":\"0\",\"swapAmount\":\"449962867218454038\",\"amountOut\":\"2380323\",\"exchange\":\"curve-tricrypto-ng\",\"poolLength\":3,\"poolType\":\"curve-tricrypto-ng\",\"poolExtra\":{\"TokenInIsNative\":false,\"TokenOutIsNative\":false,\"tokenInIndex\":2,\"tokenOutIndex\":1,\"underlying\":false},\"extra\":{\"K0\":[999995447773597078,0,0,0],\"Xp\":[[2655313537685290401,82888,0,0],[5688357839702187004,83234,0,0],[13809205227614129566,83162,0,0]]}}]]},\"zapAmounts\":[2644814,499541258646162163],\"estimatedGas\":1451371}"
        requestId: "a5ba3e5da768d40bd545815b96a43e61"
    v1DecodeInRouteResponseData:
      type: object
      properties:
        json:
          type: string
          description: JSON encode of the zap in route.
      description: Encompasses returned data.
    v1DecodeMigrateRouteRequest:
      type: object
      properties:
        route:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: the route as returned from get-route endpoint.
          format: byte
      description: Decode zap-migrate route for debugging purposes.
    v1DecodeMigrateRouteResponse:
      type: object
      properties:
        code:
          title: grpc error code
          type: integer
          format: int32
        message:
          title: grpc error message
          type: string
        data:
          $ref: '#/components/schemas/v1DecodeMigrateRouteResponseData'
        requestId:
          title: request trace id
          type: string
      description: Returns the zap-migrate route details.
    v1DecodeMigrateRouteResponseData:
      type: object
      properties:
        json:
          type: string
          description: JSON encode of the zap in route.
      description: Encompasses returned data.
    v1DecodeOutRouteRequest:
      type: object
      properties:
        route:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: the route as returned from get-route endpoint.
          format: byte
      description: Decode zap-out route for debugging purposes.
    v1DecodeOutRouteResponse:
      type: object
      properties:
        code:
          title: grpc error code
          type: integer
          format: int32
        message:
          title: grpc error message
          type: string
        data:
          $ref: '#/components/schemas/v1DecodeOutRouteResponseData'
        requestId:
          title: request trace id
          type: string
      description: Returns the zap-out route details.
    v1DecodeOutRouteResponseData:
      type: object
      properties:
        json:
          type: string
          description: JSON encode of the zap in route.
      description: Encompasses returned data.
    v1Dex:
      type: string
      description: |-
        Dex is the type of dex to zap into/out of. It uses different enum values from the zap contract.

         - DEX_UNSPECIFIED: Unspecified value.
         - DEX_UNISWAPV3: For UniSwap V3.
         - DEX_PANCAKESWAPV3: For PancakeSwap V3.
         - DEX_UNISWAPV2: For Uniswap V2.
         - DEX_SUSHISWAPV2: For SushiSwap V2.
         - DEX_CURVE: For Curve
         - DEX_BALANCER: For Balancer
         - DEX_METAVAULTV3: MetaVault V3
         - DEX_RAMSESCL: Ramses CL
         - DEX_QUICKSWAPV3UNI: Quickswap V3 Uni
         - DEX_SUSHISWAPV3: SushiSwap V3
         - DEX_THRUSTERV3: Thruster V3
         - DEX_CAMELOTV3: Camelot V3
         - DEX_QUICKSWAPV3ALGEBRA: Quickswap V3 Algebra
         - DEX_THENAFUSION: Thena Fusion
         - DEX_PANCAKESWAPV2: PancakeSwap V2
         - DEX_METAVAULTV2: MetaVault V2
         - DEX_PANGOLINSTANDARD: Pangolin Standard
         - DEX_QUICKSWAPV2: Quickswap V2
         - DEX_THRUSTERV2: Thruster V2 (1% fee)
         - DEX_CAMELOTV2: Camelot V2
         - DEX_LYNEX: Lynex
         - DEX_RAMSESLEGACY: Ramses Legacy
         - DEX_AERODROMECL: Aerodrome Concentrated
         - DEX_AERODROMEBASICVOLATILE: Aerodrome Basic Volatile
         - DEX_AERODROMEBASICSTABLE: Aerodrome Basic Stable
         - DEX_GAMMA: Gamma
         - DEX_AMBIENT: Ambient
         - DEX_DEFIEDGE: DefiEdge
         - DEX_BEEFY: Beefy
         - DEX_VFAT: Vfat
         - DEX_MAVERICK: Maverick
         - DEX_TRADERJOE: Traderjoe
         - DEX_THRUSTERV2DEGEN: Thruster V2 Degen (0.3% fee)
         - DEX_LINEHUBV3: LineHub V3
         - DEX_RINGV2: Ring V2
         - DEX_KOILEGACY: KOI Legacy
         - DEX_KOICL: KOI CL
         - DEX_EQUALIZER: Equalizer
         - DEX_NILE: Nile
         - DEX_ARRAKIS: Arrakis
         - DEX_ICHI: ICHI
         - DEX_GMX: GMX
         - DEX_SWAPMODEV2: SwapMode V2
         - DEX_SOLIDLY: Solidly
         - DEX_SWAPMODEV3: SwapMode V3
      default: DEX_UNSPECIFIED
      enum:
        - DEX_UNSPECIFIED
        - DEX_UNISWAPV3
        - DEX_PANCAKESWAPV3
        - DEX_UNISWAPV2
        - DEX_SUSHISWAPV2
        - DEX_CURVE
        - DEX_BALANCER
        - DEX_METAVAULTV3
        - DEX_RAMSESCL
        - DEX_QUICKSWAPV3UNI
        - DEX_SUSHISWAPV3
        - DEX_THRUSTERV3
        - DEX_CAMELOTV3
        - DEX_QUICKSWAPV3ALGEBRA
        - DEX_THENAFUSION
        - DEX_PANCAKESWAPV2
        - DEX_METAVAULTV2
        - DEX_PANGOLINSTANDARD
        - DEX_QUICKSWAPV2
        - DEX_THRUSTERV2
        - DEX_CAMELOTV2
        - DEX_LYNEX
        - DEX_RAMSESLEGACY
        - DEX_AERODROMECL
        - DEX_AERODROMEBASICVOLATILE
        - DEX_AERODROMEBASICSTABLE
        - DEX_GAMMA
        - DEX_AMBIENT
        - DEX_DEFIEDGE
        - DEX_BEEFY
        - DEX_VFAT
        - DEX_MAVERICK
        - DEX_TRADERJOE
        - DEX_THRUSTERV2DEGEN
        - DEX_LINEHUBV3
        - DEX_RINGV2
        - DEX_KOILEGACY
        - DEX_KOICL
        - DEX_EQUALIZER
        - DEX_NILE
        - DEX_ARRAKIS
        - DEX_ICHI
        - DEX_GMX
        - DEX_SWAPMODEV2
        - DEX_SOLIDLY
        - DEX_SWAPMODEV3
    v1GetInRouteResponse:
      type: object
      properties:
        code:
          title: grpc error code
          type: integer
          format: int32
        message:
          title: grpc error message
          type: string
        data:
          $ref: '#/components/schemas/v1GetInRouteResponseData'
        requestId:
          title: request trace id
          type: string
      description: Returns the best route to zap-in to the specified pool position.
      example:
        message: "OK"
        data:
          poolDetails:
            category: "common_pair"
            uniswapV3:
              tick: 259661
              newTick: 259661
              sqrtP: "34441043722219267846042009462652656"
              newSqrtP: "34441043737601305531684264539945030"
          positionDetails:
            addedLiquidity: "1149974764979"
            addedAmountUsd: "3670.40949860"
          zapDetails:
            initialAmountUsd: "3673.00201650"
            actions:
              - type: "ACTION_TYPE_PROTOCOL_FEE"
                protocolFee:
                  pcm: 50
                  tokens:
                    - address: "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
                      amount: "500000000000000"
                      amountUsd: "1.83650101"
              - type: "ACTION_TYPE_AGGREGATOR_SWAP"
                aggregatorSwap:
                  swaps:
                    - tokenIn:
                        address: "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
                        amount: "499958741353837836"
                        amountUsd: "1836.34946516"
                      tokenOut:
                        address: "0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f"
                        amount: "2644815"
                        amountUsd: "1835.59443695"
              - type: "ACTION_TYPE_POOL_SWAP"
                poolSwap:
                  swaps:
                    - tokenIn:
                        address: "0x82af49447d8a07e3bd95bd0d56f35241523fbab1"
                        amount: "102872182233841"
                        amountUsd: "0.37784973"
                      tokenOut:
                        address: "0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f"
                        amount: "544"
                        amountUsd: "0.37755509"
              - type: "ACTION_TYPE_ADD_LIQUIDITY"
                addLiquidity:
                  token0:
                    address: "0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f"
                    amount: "2645358"
                    amountUsd: "1835.97129800"
                  token1:
                    address: "0x82af49447d8a07e3bd95bd0d56f35241523fbab1"
                    amount: "499438386463928322"
                    amountUsd: "1834.43820060"
            finalAmountUsd: "3670.40949860"
            priceImpact: 0.070583075
          route: "KLUv/WAdB00bAOY5nCNAj3JMrqhs1F7Rx8ZtyeIRkgGqIXfgSOampMyhZleOYZgzAYgAigChAM2d3Nn7iLnY66vzVWYuXVS7q9ecpZ+zuUgxlxgVb4CvKk5c764QuTno0imHOZAmq01WqNmBDoff4WhbyNyxdn8hlq4uHYQOP1BjCDWHV0uHsQX9crda1svR5WSJl+75T1b4y8HZzdt+qYcdjX0yKJX+s7wxlBi85iCX0RzlUjbnuKRa5Tb3XEbqyqp2Of//RpLLhIJJCiRtYlJRk0uHGLyGI0Dr/+ek+tNxrUdW3G9EDMDECqAxIvZvK0xEXR2gEM1dLrFL1zB4KVM9X3vb1XX/1/nXb69d/6uUL4VyQUzVXKVZTCIREw9Ecimj1lUzXeXyRNWcxaVVVsuo//zJzUVQkfdfeTvXWykzqsJeinEpk7nPJOIMUC4aIpOJRPSQtIN0WgHQJtgjYZSHhEk8709hFpZLksolagwRhAISwdd1/NluW+wXS/XMIaXQYo5lmQ/kbGQyoVwGBERzLbpMKpcyJ9Aa1BoBq0SYdulScxc+sie3wgC0sIeFPXjZI7oocGLv6/pSVr7bGV0UmiXCoOZaxGERCKsQaA+kshC1iQpDSMe+u1hx768GtLq65hwWh1ZfARm1VPGq5h6XMo1GJtPIVuqpmz/Vql6ZjPnoqlZTPS3icqW+WN2bIVLDPT0pXPxk76WsnZSHSw1MvnA961prlx+iOTS4hwRyEak0h+RySWGaQ1LQUAGJWIKloEEfEoBJRLmoPJBKBNAqKpdHU9FVcXnbs/+3ZT/sdW0/ns63cyvmUGYqZ6OyQrg6PTUymeZQXBImAmEgQAJCDDOmHZLEGJj0Yxm1rG2f2YZ071vZSmuTEYMc7ksXKTyQndCnyoI34X93YwbNI3xyLUJ6AY9LrS6IJcMwm/eSsBsVqAI2PFuTKUizGWTHhcFXrKvsl7iawsClp6xyNDBUSxoFdUsqRanhffuMrI+Aa2sqmbkA6Xgu21EIhh/cypg4W7hogNnGFhyT24o1cAeaZ5ILOW7cAQIfQCmJ49N52JNgQ7O7L1gWAkKhheQ60Elw0AKCCulGAVUHGJgaPIElWIKKTLpC06UHnCVX7TvCAMNuc2ogLKuyTnCUAPqFS2x0VeyCy+qwbowuW746oVmIAg=="
          routerAddress: "0x6960f99e6F9A9A5EFcd44C5BaA3245aC2b145287"
          gas: "1451371"
          gasUsd: "0.05330889"
        requestId: "45fa8a6175f45233678b10fc2a72c4b9"
    v1GetInRouteResponseData:
      type: object
      properties:
        poolDetails:
          $ref: '#/components/schemas/v1PoolDetails'
        positionDetails:
          $ref: '#/components/schemas/v1PositionDetails'
        zapDetails:
          $ref: '#/components/schemas/v1ZapDetails'
        route:
          title: the zap route to pass to build API to get call-data
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        routerAddress:
          title: the router address to check approval amount
          type: string
        gas:
          title: rough estimate of gas required for the transaction
          type: string
        gasUsd:
          title: USD value of estimated gas required
          type: string
      description: Encompasses returned data.
    v1GetMigrateRouteResponse:
      type: object
      properties:
        code:
          title: grpc error code
          type: integer
          format: int32
        message:
          title: grpc error message
          type: string
        data:
          $ref: '#/components/schemas/v1GetMigrateRouteResponseData'
        requestId:
          title: request trace id
          type: string
      description: Returns the best route to zap-migrate from an existing position to the specified pool position.
    v1GetMigrateRouteResponseData:
      type: object
      properties:
        poolDetails:
          $ref: '#/components/schemas/v1PoolDetails'
        positionDetails:
          $ref: '#/components/schemas/v1PositionDetails'
        zapDetails:
          $ref: '#/components/schemas/v1ZapDetails'
        route:
          title: the zap route to pass to build API to get call-data
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        routerAddress:
          title: the router address to check approval amount
          type: string
        gas:
          title: rough estimate of gas required for the transaction
          type: string
        gasUsd:
          title: USD value of estimated gas required
          type: string
      description: Encompasses returned data.
    v1GetOutRouteResponse:
      type: object
      properties:
        code:
          title: grpc error code
          type: integer
          format: int32
        message:
          title: grpc error message
          type: string
        data:
          $ref: '#/components/schemas/v1GetOutRouteResponseData'
        requestId:
          title: request trace id
          type: string
      description: Returns the best route to zap-out from an existing position to the specified pool position.
    v1GetOutRouteResponseData:
      type: object
      properties:
        zapDetails:
          $ref: '#/components/schemas/v1ZapDetails'
        route:
          title: the zap route to pass to build API to get call-data
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          format: byte
        routerAddress:
          title: the router address to check approval amount
          type: string
        gas:
          title: rough estimate of gas required for the transaction
          type: string
        gasUsd:
          title: USD value of estimated gas required
          type: string
      description: Encompasses returned data.
    v1Pool:
      type: object
      properties:
        id:
          type: string
          description: id of the pool to zap into.
      description: Pool describes the pool to zap into.
    v1PoolDetails:
      title: details of the pool
      type: object
      properties:
        category:
          type: string
        uniswapV3:
          $ref: '#/components/schemas/PoolDetailsUniswapV3'
        uniswapV2:
          $ref: '#/components/schemas/PoolDetailsUniswapV2'
        algebraV1:
          $ref: '#/components/schemas/PoolDetailsAlgebraV1'
    v1Position:
      type: object
      properties:
        id:
          title: id of the position to add liquidity to; omit to create a new uniswapV3 position. for uniswapV2 this is user address
          type: string
        tickLower:
          type: integer
          description: "min tick of the position, required if creating a new uniswapV3 position."
          format: int32
        tickUpper:
          type: integer
          description: "max tick of the position, required if creating a new uniswapV3 position."
          format: int32
      description: Position describes either an existing position or a new one.
    v1PositionDetails:
      title: details of the new position state
      type: object
      properties:
        removedLiquidity:
          title: how much position liquidity to be removed
          pattern: \d+
          type: string
        removedAmountUsd:
          title: total USD value of the position to be removed
          type: string
        addedLiquidity:
          title: how much position liquidity to be added
          pattern: \d+
          type: string
        addedAmountUsd:
          title: total USD value of the position to be added
          type: string
    v1ZapDetails:
      title: details of the zap
      type: object
      properties:
        initialAmountUsd:
          title: USD value of the source zap token amount
          type: string
        actions:
          title: list of zap actions
          type: array
          items:
            $ref: '#/components/schemas/ZapDetailsAction'
        finalAmountUsd:
          title: USD value of the final amount including the added position and the left-over amount
          type: string
        priceImpact:
          title: price impact after zapping of final amount against initial amount
          type: number
          format: float
x-original-swagger-version: "2.0"
